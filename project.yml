- name: Create OCP resources for development team
  hosts: all
  vars:
    ocp_server: "https://192.168.99.105:8443"
    token: "mwrIUT1TetayyUo5Q1yLBr6g8_1LmW39pmKfOF2ady8"
    git_url: "https://github.com/mglantz/openshift-demos"
    admin_user: "admin"
    dev_user: "developer"
    project_name: "myproject"

    cicd_template: "https://raw.githubusercontent.com/mglantz/openshift-demos/master/source/blue-green/template.json"
    
  tasks:
    - name: Login to cluster
      command: oc login --insecure-skip-tls-verify --token={{ token }} {{ ocp_server }}
      register: ocp_login

    - name: Validate project cicd
      command: "oc get project {{ project_name }}-cicd"
      when: "ocp_login.rc == 0"
      changed_when: False
      failed_when: False
      register: validate_cicd

    - name: Create cicd project
      command: "oc new-project {{ project_name }}-cicd"
      when: "validate_cicd.rc != 0"

    - name: Validate project test
      command: oc get project {{ project_name }}-test
      changed_when: False
      failed_when: False
      register: validate_test

    - name: Create test project
      command: oc new-project {{ project_name }}-test
      when: "validate_test.rc != 0"

    - name: Validate project prod
      command: oc get project {{ project_name }}-prod
      changed_when: False
      failed_when: False
      register: validate_prod

    - name: Create prod project
      command: oc new-project {{ project_name }}-prod
      when: "validate_prod.rc != 0"

    - name: Set Limits
      command: oc apply -f https://raw.githubusercontent.com/jbrannst/ocp-project-ansible/master/limitrange -n {{ item }}
      with_items: 
        - "{{ project_name }}-cicd"
        - "{{ project_name }}-test"
        - "{{ project_name }}-prod"

    - name: Add admin access
      command: oc policy add-role-to-user admin {{ admin_user }} -n {{ item }}
      with_items:
        - "{{ project_name }}-cicd"
        - "{{ project_name }}-test"
        - "{{ project_name }}-prod"

    - name: Add edit access
      command: oc policy add-role-to-user edit {{ dev_user }} -n {{ item }}
      with_items:
        - "{{ project_name }}-cicd"
        - "{{ project_name }}-test"
        - "{{ project_name }}-prod"

    - name: Add access to test and prod projects for Jenkins
      command: oc policy add-role-to-user edit system:serviceaccount:{{ project_name }}-cicd:jenkins -n {{ item }}
      with_items:
        - "{{ project_name }}-test"
        - "{{ project_name }}-prod"
    
    - name: Add view access to test and prod projects
      command: oc policy add-role-to-user view system:serviceaccount:{{ item }}:default -n {{ item }}
      with_items:
        - "{{ project_name }}-test"
        - "{{ project_name }}-prod"

   - name: Check for Jenkinsfile
      get_url:
        url: {{ git_url }}/Jenkinsfile
        dest: /tmp/Jenkinsfile
        mode: 0400
      changed_when: False
      failed_when: False
      register: validate_jenkinsfile

    - name: Fetch for Jenkinsfile
      get_url:
        url: https://raw.githubusercontent.com/jbrannst/ocp-project-ansible/master/templates/jbuildconfig.j2
        dest: jbuildconfig.j2
        mode: 0700
      changed_when: False
      failed_when: False
      when: "validate_jenkinsfile.rc == 0"
      register: fetched_jenkinsfile

    - name: Generate Jenkins buildconfig
      template: src=jbuildconfig.j2 dest=/tmp/jbuildconfig.j2
        vars: {{ git_url }}
      when: (validate_jenkinsfile.rc == 0 and fetched_jenkinsfile.rc == 0)
      register: generate_template

    - name: Create Jenkins server
      command: oc apply -f /tmp/jbuildconfig.j2
      when: (validate_jenkinsfile.rc == 0 and generate_template.rc == 0)

